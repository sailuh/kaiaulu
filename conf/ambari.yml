# -*- yaml -*-
# https://github.com/sailuh/kaiaulu
#
# Copying and distribution of this file, with or without modification,
# are permitted in any medium without royalty provided the copyright
# notice and this notice are preserved.  This file is offered as-is,
# without any warranty.

# Project Configuration File #
#
# To perform analysis on open source projects, you need to manually
# collect some information from the project's website. As there is
# no standardized website format, this file serves to distill
# important data source information so it can be reused by others
# and understood by Kaiaulu.
#
# Please check https://github.com/sailuh/kaiaulu/tree/master/conf to
# see if a project configuration file already exists. Otherwise, we
# would appreciate if you share your curated file with us by sending a
# Pull Request: https://github.com/sailuh/kaiaulu/pulls
#
# Note, you do NOT need to specify this entire file to conduct analysis.
# Each R Notebook uses a different portion of this file. To know what
# information is used, see the project configuration file section at
# the start of each R Notebook.
#
# Please comment unused parameters instead of deleting them for clarity.
# If you have questions, please open a discussion:
# https://github.com/sailuh/kaiaulu/discussions

project:
  website: https://ambari.apache.org
  openhub: https://www.openhub.net/p/ambari

version_control:
  # Where is the git log located locally?
  # This is the path to the .git of the project repository you are analyzing.
  # The .git is hidden, so you can see it using `ls -a`
  # log: ../../rawdata/git_repo/ambari/.git
  log: ../../rawdata/ambari/git_repo/.git
  # From where the git log was downloaded?
  log_url: https://github.com/apache/ambari
  # List of branches used for analysis
  branch:
    - trunk
    - branch-2.7
    - revert-3247-custom_metrics_download_file_name
    - revert-3241-AMBARI-25568
    - revert-3227-AMBARI-25558-branch-2.7-10
    - branch-2.6
    - revert-3041-AMBARI-25311-branch-2.7
    - branch-2.5

mailing_list:
  mod_mbox:
    project_key_1:
      mailing_list: http://mail-archives.apache.org/mod_mbox/ambari-dev
      save_folder_path: ../../rawdata/ambari/mod_mbox/save_mbox_mail/
      # mbox_file_path is for use only with parse_mbox() function. It is the file to parse
#      mbox_file_path: ../../rawdata/ambari/mod_mbox/save_mbox_mail/ambari.mbox
    project_key_2:
      mailing_list: http://mail-archives.apache.org/mod_mbox/ambari-user
      save_folder_path: ../../rawdata/ambari/mod_mbox/save_mbox_mail_2/
      # mbox_file_path is for use only with parse_mbox() function. It is the file to parse
#      mbox_file_path: ../../rawdata/ambari/mod_mbox/save_mbox_mail_2/ambari.mbox
#   pipermail:
#     project_key_1:
#       mailing_list: https://mta.openssl.org/pipermail/kaiaulu-dev/
#       save_folder_path: ../../rawdata/kaiaulu/pipermail/save_mbox_mail/
#       # mbox_file_path is for use only with parse_mbox() function. It is the file to parse
#       mbox_file_path: ../../rawdata/kaiaulu/pipermail/save_mbox_mail/kaiaulu.mbox
#     project_key_2:
#       mailing_list: https://mta.openssl.org/pipermail/kaiaulu-users/
#       save_folder_path: ../../rawdata/kaiaulu/pipermail/save_mbox_mail_2/
#       # mbox_file_path is for use only with parse_mbox() function. It is the file to parse
#       mbox_file_path: ../../rawdata/kaiaulu/pipermail/save_mbox_mail_2/kaiaulu.mbox

issue_tracker:
  jira:
    project_key_1:
      # Obtained from the project's JIRA URL
      domain: https://issues.apache.org/jira
      project_key: AMBARI
      # Download using `download_jira_data.Rmd`
      # issues: ../../rawdata/ambari/jira/issues/ambari/
      # issue_comments: ../../rawdata/ambari/jira/issue_comments/ambari/
  github:
    project_key_1:
      # Obtained from the project's GitHub URL
      owner: apache
      repo: ambari
      # Download using `download_github_comments.Rmd`
      issue_or_pr_comment: ../../rawdata/ambari/github/issue_or_pr_comment/apache_ambari/
      issue: ../../rawdata/ambari/github/issue/apache_ambari/
      issue_search: ../../rawdata/ambari/github/issue_search/apache_ambari/
      issue_event: ../../rawdata/ambari/github/issue_event/apache_ambari/
      pull_request: ../../rawdata/ambari/github/pull_request/apache_ambari/
      commit: ../../rawdata/ambari/github/commit/apache_ambari/
  # bugzilla:
  #   project_key_1:
  #     project_key: ambari
  #     issues: ../../rawdata/ambari/bugzilla/issues/ambari/
  #     issue_comments: ../../rawdata/ambari/bugzilla/issue_comments/ambari/


#vulnerabilities:
  # Folder path with nvd cve feeds (e.g. nvdcve-1.1-2018.json)
  # Download at: https://nvd.nist.gov/vuln/data-feeds
  #nvd_feed: rawdata/nvdfeed

# Commit message CVE or Issue Regular Expression (regex)
# See project's commit message for examples to create the regex
commit_message_id_regex:
  issue_id: \#[0-9]+
  #cve_id: ?

filter:
  keep_filepaths_ending_with:
    - cpp
    - c
    - h
    - java
    - js
    - py
    - cc
  remove_filepaths_containing:
    - test

# Third Party Tools Configuration #
#
# See Kaiaulu's README.md for details on how to setup these tools.
tool:
  # Depends allow to parse file-file static dependencies.
  depends:
    # accepts one language at a time: cpp, java, ruby, python, pom
    # You can obtain this information on OpenHub or the project GiHub page right pane.
    code_language: java
    # Specify which types of Dependencies to keep - see the Depends tool README.md for details.
    keep_dependencies_type:
      - Cast
      - Call
      - Import
      - Return
      - Set
      - Use
      - Implement
      - ImplLink
      - Extend
      - Create
      - Throw
      - Parameter
      - Contain
  # dv8:
  #   # The project folder path to store various intermediate
  #   # files for DV8 Analysis
  #   # The folder name will be used in the file names.
  #   folder_path: ../../analysis/junit/dv8/
  #   # the architectural flaws thresholds that should be used
  #   architectural_flaws:
  #     cliqueDepends:
  #       - call
  #       - use
  #     crossingCochange: 2
  #     crossingFanIn: 4
  #     crossingFanOut: 4
  #     mvCochange: 2
  #     uiCochange: 2
  #     uihDepends:
  #       - call
  #       - use
  #     uihInheritance:
  #       - extend
  #       - implement
  #       - public
  #       - private
  #       - virtual
  #     uiHistoryImpact: 10
  #     uiStructImpact: 0.01
  # Uctags allows finer file-file dependency parsing (e.g. functions, classes, structs)
  uctags:
    # See https://github.com/sailuh/kaiaulu/wiki/Universal-Ctags for details
    # What types of file-file dependencies should be considered? If all
    # dependencies are specified, Kaiaulu will use all of them if available.
    keep_lines_type:
      c:
        - f # function definition
      cpp:
        - c # classes
        - f # function definition
      java:
        - c # classes
        - m # methods
      python:
        - c # classes
        - f # functions
      r:
        - f # functions
  # # srcML allow to parse src code as text (e.g. identifiers)
  # srcml:
  #   # The file path to where you wish to store the srcml output of the project
  #   srcml_path: ../../analysis/junit5/srcml/srcml_junit.xml
  # pattern4:
  #   # The file path to where you wish to store the classes of the pattern4 analysis
  #   class_folder_path: ../../rawdata/junit5/pattern4/junit-platform-engine/build/classes/java/main/org/junit/platform/engine/
  #   # The file path to where you wish to store the output of the pattern4 analysis
  #  output_filepath: ../../analysis/junit5/pattern4/
  #   compile_note: >
  #     1. Switch Java version to Java 17:
  #        https://stackoverflow.com/questions/69875335/macos-how-to-install-java-17
  #     2. Disable VPN to pull modules from Gradle Plugin Portal.
  #     3. Use sudo ./gradlew build
  #     4. After building, locate the engine class files and specify as the class_folder_path:
  #        in this case they are in: /path/to/junit5/analysis/junit-platform-engine/build/classes/java/main/org/junit/platform/engine/
  # understand:
  #   # Accepts one language at a time: ada, assembly, c/c++, c#, fortran, java, jovial, delphi/pascal, python, vhdl, basic, javascript
  #   code_language: java
  #   # Specify which types of Dependencies to keep
  #   keep_dependencies_type:
  #     - Import
  #     - Call
  #     - Create
  #     - Use
  #     - Type GenericArgument
  #   # Where the files to analyze should be stored
  #   project_path: ../../rawdata/kaiaulu/git_repo/understand/
  #   # Where the output for the understands analysis is stored
  #   output_path: ../../analysis/kaiaulu/understand/

# Analysis Configuration #
analysis:
  # You can specify the intervals in 2 ways: window, or enumeration
  window:
    # If using gitlog, use start_commit and end_commit. Timestamp is inferred from gitlog
#    start_commit: b53fa3c4755b7ae6af86cf893924d3e88d449401
#    end_commit: 1a711038698490b1f6423e3e4801ae98598d0366
    # Alternatively, you can specify the start and end datetime (UTC timezone is assumed).
    start_datetime: 2017-01-31 00:00:00
    end_datetime: 2019-01-31 00:00:00
    size_days: 90
#  enumeration:
     # If using gitlog, specify the commits
#    commit:
#      - 9eae9e96f15e1f216162810cef4271a439a74223
#      - f1d2d568776b3708dd6a3077376e2331f9268b04
#      - c33a2ce74c84f0d435bfa2dd8953d132ebf7a77a
     # Use datetime only if no gitlog is used in the analysis. Timestamp is inferred from gitlog
#    datetime:
#      - 2013-05-01 00:00:00
#      - 2013-08-01 00:00:00
#      - 2013-11-01 00:00:00
